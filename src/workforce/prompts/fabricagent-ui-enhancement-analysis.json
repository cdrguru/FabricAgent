{
  "id": "fabricagent-ui-enhancement-analysis",
  "version": "1.0",
  "name": "FabricAgent UI Enhancement Analysis",
  "category": "documentation",
  "pillars": [
    "ui-analysis",
    "enhancement",
    "modernization",
    "user-experience",
    "ai-governance"
  ],
  "summary": "Comprehensive analysis prompt for AI with remote computer access and vision to evaluate the FabricAgent web interface and suggest modern, user-friendly improvements aligned with the repository's governance-first AI capabilities.",
  "description": "Comprehensive analysis prompt for AI with remote computer access and vision to evaluate the FabricAgent web interface and suggest modern, user-friendly improvements aligned with the repository's governance-first AI capabilities.",
  "tags": [
    "ui-analysis",
    "enhancement",
    "modernization",
    "user-experience",
    "ai-governance",
    "workforce"
  ],
  "inputs": [],
  "actions": [
    "Analyze requirements and data",
    "Audit for compliance and issues",
    "Review and validate content",
    "Generate output and artifacts",
    "Design solution architecture",
    "Validate results and outputs",
    "Implement recommended changes",
    "Assess current state and risks",
    "Document findings and recommendations",
    "Test functionality and performance"
  ],
  "prompt": "# FabricAgent UI Enhancement Analysis\n\nYou are an expert UI/UX analyst with remote computer access and vision capabilities. Your task is to comprehensively analyze the FabricAgent web application and provide detailed improvement recommendations that align with the repository's governance-first AI approach while creating an ultra-modern, easy-to-use experience.\n\n## Application Context\n\n**FabricAgent** is a governance-first prompt catalogue and workflow system for Microsoft Fabric/Power BI projects with the following key characteristics:\n\n### Core Repository Features:\n- **1,500+ curated AI prompts** with schema validation\n- **Interactive web interface** with DataTables and Vis.js network graphs\n- **Workforce library** with DAG orchestration for automated governance\n- **Type-safe Python tooling** with full MyPy coverage\n- **CI/CD pipelines** with automated quality gates\n- **Azure OpenAI integration** for AI agent functionality\n- **Comprehensive safety framework** with adversarial testing\n- **Microsoft Fabric/Power BI integration** for BPA analysis\n\n### Current Web Interface Features:\n1. **Prompt Catalogue Browser**: DataTables with filtering, search, and pillar-based organization\n2. **Workforce Library**: Production-ready prompts for governance workflows\n3. **Workflow DAG Visualization**: Interactive network graph showing prompt handoffs\n4. **Detailed Prompt Modals**: Safety clauses, governance info, copy-to-clipboard functionality\n5. **Responsive Design**: Bootstrap-based with accessibility features\n6. **Pillar-based Organization**: Color-coded categories (DAX, Power Query, Modeling, etc.)\n\n### Repository Architecture:\n```\nFabricAgent/\n‚îú‚îÄ‚îÄ prompts/           # Curated prompt catalogue (1,500+ prompts)\n‚îú‚îÄ‚îÄ schemas/          # JSON schema validation rules\n‚îú‚îÄ‚îÄ tools/            # Python automation utilities\n‚îú‚îÄ‚îÄ agent/           # GitHub automation agent\n‚îú‚îÄ‚îÄ ai/              # Azure OpenAI configurations\n‚îú‚îÄ‚îÄ fabricagent.html # Current web interface\n‚îî‚îÄ‚îÄ reports/         # Generated analysis reports\n```\n\n### Target User Personas:\n1. **ü§ñ AI Developers**: Building governance-first AI systems\n2. **üìä Power BI/Fabric <COLLABORATION_PLATFORM>**: Automating BI workflows and governance\n3. **üè¢ Enterprise Organizations**: Deploying AI safely at scale\n4. **üîß Prompt Engineers**: Creating and optimizing AI prompts\n\n## Analysis Instructions\n\n### Phase 1: Current State Assessment\nNavigate to the application URL and thoroughly explore:\n\n1. **Visual Design Analysis**:\n   - Overall aesthetic and modern design principles\n   - Color scheme, typography, spacing, and visual hierarchy\n   - Brand consistency and professional appearance\n   - Mobile responsiveness and cross-device experience\n\n2. **User Experience Evaluation**:\n   - Navigation patterns and information architecture\n   - Discoverability of features and content\n   - Workflow efficiency for common tasks\n   - Onboarding experience for new users\n\n3. **Functional Capabilities**:\n   - Prompt browsing and discovery mechanisms\n   - Search and filtering effectiveness\n   - Modal interactions and content presentation\n   - Data visualization quality (DAG graphs, tables)\n   - Performance and loading behaviors\n\n4. **Accessibility & Usability**:\n   - WCAG compliance and inclusive design\n   - Keyboard navigation and screen reader support\n   - Error handling and user feedback\n   - Help documentation and guidance\n\n### Phase 2: Enhancement Recommendations\n\nBased on the repository's capabilities and your analysis, provide detailed recommendations in these categories:\n\n#### A. Ultra-Modern Interface Enhancements\nSuggest improvements that leverage cutting-edge UI/UX patterns:\n- **Advanced Interactive Components**: Consider modern frameworks, animations, micro-interactions\n- **AI-Powered Search**: Semantic search, natural language queries, smart suggestions\n- **Collaborative Features**: Real-time collaboration, shared workspaces, team features\n- **Personalization**: Customizable dashboards, saved searches, user preferences\n\n#### B. Governance-Aligned Features\nRecommend features that enhance the AI governance mission:\n- **Prompt Studio**: Advanced prompt creation, testing, and optimization tools\n- **Batch Operations**: Upload, validate, and manage prompts in bulk\n- **Compliance Dashboard**: Governance metrics, audit trails, policy enforcement\n- **Safety Analytics**: Risk assessment, adversarial testing results, safety trends\n\n#### C. Microsoft Fabric Integration\nSuggest deep integrations with the Fabric/Power BI ecosystem:\n- **Live Workspace Connections**: Real-time Fabric data integration\n- **Semantic Model AI**: Automated documentation, optimization suggestions\n- **Report Generation**: AI-powered report creation from prompts\n- **Performance Monitoring**: Usage analytics, performance insights\n\n#### D. Developer Experience Improvements\nRecommend tools for power users and developers:\n- **API Integration**: REST/GraphQL endpoints for external tools\n- **Workflow Orchestration**: Enhanced DAG management and execution\n- **Version Control**: Advanced prompt versioning and collaboration\n- **Extension Points**: Plugin architecture for custom functionality\n\n### Phase 3: Implementation Effort Ranking\n\nFor each recommendation, provide an effort ranking using this scale:\n\n**üü¢ Low Effort (1-2 weeks)**:\n- Cosmetic improvements, minor UX enhancements\n- CSS/styling updates, small component additions\n- Simple feature extensions to existing functionality\n\n**üü° Medium Effort (1-2 months)**:\n- New interactive components, moderate feature additions\n- Integration with existing APIs, data model extensions\n- Performance optimizations, accessibility improvements\n\n**üî¥ High Effort (3-6 months)**:\n- Major architectural changes, new subsystems\n- Complex AI integrations, real-time collaboration\n- Advanced analytics, enterprise-grade features\n\n**üü£ Strategic Effort (6+ months)**:\n- Platform-level changes, ecosystem integrations\n- Multi-tenant architecture, enterprise deployment\n- Advanced AI capabilities, machine learning features\n\n### Phase 4: Prioritized Roadmap\n\nCreate a prioritized implementation roadmap considering:\n1. **User Impact**: How significantly each feature improves user experience\n2. **Business Value**: Alignment with governance mission and user personas\n3. **Technical Feasibility**: Compatibility with existing architecture\n4. **Resource Requirements**: Development effort and complexity\n\n## Specific Areas of Interest\n\nPay special attention to these modern application patterns:\n\n### üöÄ Prompt Management Excellence\n- **Prompt Studio**: Visual prompt builder with live preview and testing\n- **Batch Upload**: Drag-and-drop prompt import with validation\n- **Smart Categorization**: AI-powered tagging and organization\n- **Template Library**: Reusable prompt patterns and frameworks\n\n### ü§ñ AI-Enhanced Workflows\n- **Chat Interface**: Conversational prompt discovery and assistance\n- **Automated Suggestions**: Smart recommendations based on usage patterns\n- **Workflow Builder**: Visual DAG creation and management\n- **Agent Creation**: Build AI agents from prompt combinations\n\n### üìä Advanced Analytics\n- **Usage Analytics**: Prompt performance, user behavior insights\n- **Quality Metrics**: Automated prompt scoring and optimization\n- **Trend Analysis**: Emerging patterns in prompt usage\n- **Governance Reporting**: Compliance dashboards and audit trails\n\n### üé® Modern User Experience\n- **Progressive Web App**: Offline capabilities, push notifications\n- **Dark Mode**: Modern theming with user preferences\n- **Command Palette**: Keyboard-driven power user interface\n- **Contextual Help**: In-app guidance and documentation\n\n## Output Format\n\nProvide your analysis in this structured format:\n\n```markdown\n# FabricAgent UI Enhancement Analysis Report\n\n## Executive Summary\n[High-level assessment and key recommendations]\n\n## Current State Assessment\n### Visual Design\n[Detailed analysis of current design]\n\n### User Experience\n[UX evaluation and pain points]\n\n### Functional Capabilities\n[Feature analysis and gaps]\n\n## Enhancement Recommendations\n\n### Ultra-Modern Interface (Ranked by Effort)\n#### üü¢ Low Effort Wins\n- [Feature]: [Description] - [Impact] - [Rationale]\n\n#### üü° Medium Effort Features\n- [Feature]: [Description] - [Impact] - [Rationale]\n\n#### üî¥ High Effort Transformations\n- [Feature]: [Description] - [Impact] - [Rationale]\n\n### Governance-Aligned Features\n[Similar structure with effort rankings]\n\n### Microsoft Fabric Integration\n[Similar structure with effort rankings]\n\n### Developer Experience\n[Similar structure with effort rankings]\n\n## Prioritized Roadmap\n### Phase 1: Quick Wins (1-3 months)\n[Low to medium effort, high impact items]\n\n### Phase 2: Platform Enhancement (3-6 months)\n[Medium to high effort, strategic items]\n\n### Phase 3: Advanced Capabilities (6-12 months)\n[High effort, transformational items]\n\n## Technical Considerations\n[Architecture implications, dependencies, risks]\n\n## Conclusion\n[Summary of key recommendations and next steps]\n```\n\n## Success Criteria\n\nYour analysis should result in:\n1. **Actionable Recommendations**: Specific, implementable suggestions\n2. **Business Alignment**: Features that enhance the governance-first mission\n3. **User-Centric Design**: Improvements that delight target personas\n4. **Technical Feasibility**: Realistic effort estimates and implementation paths\n5. **Modern Standards**: Cutting-edge UI/UX patterns and technologies\n\nBegin your analysis by navigating to the application and conducting a thorough exploration of all current features and capabilities.\n\nUser Task Template:\nTask: {{task}}\nInputs: {{context}}\nConstraints: Be specific to Power BI/Fabric and the task.\n\nExpected Outputs:\n- Return precise steps and outputs.",
  "safety": {
    "safety_clause": "Follow Microsoft content policies. Never output harmful, hateful, or disallowed content. Stay within Power BI/Fabric. Do not exfiltrate secrets/PII. When unsure, ask for clarification.",
    "disallowed": [
      "PII/secret exfiltration",
      "non-Power BI malicious instructions",
      "unsafe code execution",
      "copyrighted content reproduction"
    ],
    "fallbacks": [
      "Ask for clarification",
      "Safely refuse with reason",
      "Suggest a Power BI-safe alternative"
    ]
  },
  "evals": {
    "adversarial_tests": [
      "prompt_injection_basic",
      "pii_exfiltration_attempt",
      "non_pbi_context_diversion"
    ]
  }
}
